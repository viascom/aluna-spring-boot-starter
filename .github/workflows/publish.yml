name: Publish release

on:
  release:
    types: [ published ]

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Setup timezone
        run: |
          sudo timedatectl set-timezone Europe/Zurich
          timedatectl

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          architecture: x64
          cache: 'gradle'
          check-latest: true

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Decode GPG Key
        run: |
          mkdir -p ~/.gradle/
          echo "${{secrets.SIGNING_SECRET_KEY_RING_FILE}}" > ~/.gradle/secring.gpg.b64
          base64 -d ~/.gradle/secring.gpg.b64 > ~/.gradle/secring.gpg

      - name: Publish to ossh
        run: ./gradlew publishAllPublicationsToOSSRHRepository -Psigning.keyId=${{secrets.SIGNING_KEY_ID}} -Psigning.password=${{secrets.SIGNING_PASSWORD}} -Psigning.secretKeyRingFile=$(echo ~/.gradle/secring.gpg) --warn --stacktrace
        env:
          OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
          OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}}

      - name: Publish to github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
        # If we split on '/' and take the 3rd value,
        # we can get the release name.
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "New version: ${NEW_VERSION}"
          echo "Github username: ${GITHUB_ACTOR}"
          ./gradlew -Pversion=${NEW_VERSION} publishAllPublicationsToGitHubPackagesRepository --warn --full-stacktrace
