plugins {
    id "idea"
    id "java-library"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.6.21"
    id "org.jetbrains.kotlin.kapt" version "1.6.21"
    id "org.springframework.boot" version "2.6.7"
    id "org.liquibase.gradle" version "2.1.1"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

group "io.viascom.discord.bot"
version "0.0.18_5.0.0-alpha.11"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.bootJar { enabled = false }
tasks.jar { enabled = true }

jar {
    baseName "aluna-spring-boot-starter"
    archiveClassifier.set("")

    manifest {
        attributes "Implementation-Version": "${project.version}"
    }

    into("META-INF/maven/$project.group/aluna-spring-boot-starter") {
        from { generatePomFileForMavenJavaPublication }
        rename ".*", "pom.xml"
    }
}

springBoot {
    buildInfo()
}

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name "m2-dv8tion"
        url "https://m2.dv8tion.net/releases"
    }
}

dependencies {

    //====== Kotlin ======
    api "org.jetbrains.kotlin:kotlin-stdlib"
    api "org.jetbrains.kotlin:kotlin-reflect"

    //====== Spring ======
    api("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
        exclude module: "spring-boot-starter-json"
    }
    api "org.springframework.boot:spring-boot-starter-undertow"
    api "org.springframework.boot:spring-boot-starter-actuator"
    kapt "org.springframework.boot:spring-boot-configuration-processor"

    //====== JDA ======
    api("net.dv8tion:JDA:5.0.0-alpha.11_DEV"){
        exclude group: "org.apache.commons", module: "commons-collections4" //Because of https://advisory.checkmarx.net/advisory/vulnerability/Cx78f40514-81ff/
    }
    implementation 'org.apache.commons:commons-collections4:4.4'

    //====== Retrofit2 ======
    api "com.squareup.retrofit2:retrofit:2.9.0"
    api "com.squareup.retrofit2:converter-gson:2.9.0"

    //====== Gson ======
    api "com.google.code.gson:gson:2.9.0"
    api "com.fatboyindustrial.gson-javatime-serialisers:gson-javatime-serialisers:1.1.1"

    //====== Logging ======
    api "org.zalando:logbook-logstash:2.14.0"
    api "org.zalando:logbook-spring-boot-starter:2.14.0"
    api "com.datadoghq:dd-trace-api:0.100.0"

    //====== Script-Engine ======
    api "org.openjdk.nashorn:nashorn-core:15.4"
    api "org.graalvm.js:js:22.1.0"
    api "org.graalvm.js:js-scriptengine:22.1.0"

    api 'com.aventrix.jnanoid:jnanoid:2.0.0'
    api "org.apache.commons:commons-lang3:3.12.0"
    api "com.google.guava:guava:31.1-jre"
    api("com.vdurmont:emoji-java:5.1.1") {
        exclude group: "org.json", module: "json" //Because of https://advisory.checkmarx.net/advisory/vulnerability/Cx08fcacc9-cb99/
    }
    implementation 'org.json:json:20220320'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
}

classes {
    doLast {
        // Copy generated spring-configuration-metadata.json into jar resources
        file("build/tmp/kapt3/classes/main/META-INF/spring-configuration-metadata.json").renameTo(file("build/resources/main/META-INF/spring-configuration-metadata.json"))
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/viascom/aluna-spring-boot-starter")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                groupId = 'io.viascom.discord.bot'
                name = 'aluna-spring-boot-starter'
                description = 'Viascom core library for Discord bots.'
                url = 'https://github.com/viascom/aluna-spring-boot-starter'
                packaging = 'jar'

                scm {
                    url = 'https://github.com/viascom/aluna-spring-boot-starter'
                    connection = 'scm:git://github.com/viascom/aluna-spring-boot-starter.git'
                    developerConnection = 'scm:git://github.com/viascom/aluna-spring-boot-starter.git'
                }

                developers {
                    developer {
                        id = 'itsmefox'
                        name = 'Patrick BÃ¶sch'
                        email = 'patrick.boesch@viascom.email'
                        organizationUrl = 'https://viascom.io/'
                    }
                    developer {
                        id = 'botscripter'
                        name = 'Nikola Stankovic'
                        email = 'nikola.stankovic@viascom.email'
                        organizationUrl = 'https://viascom.io/'
                    }
                }
            }
        }
    }
}
